#
# Copyright (c) 2022.  Agency for Digital Government (DIGG)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

logging.level.se.swedenconnect.ca.service.base=DEBUG

# Service
server.port=9090
server.servlet.context-path=/ca
spring.banner.location=classpath:/cfg/banner.txt
ca-service.config.data-directory=#{null}
ca-service.config.base-url=http://localhost:8080
ca-service.config.control-port=9006
ca-service.config.crl-refresh-margin-seconds=60
ca-service.config.enforce-ocsp-content-type=true
ca-service.config.verbose-cert-print=false
# To allow all available ports specify ${server.port},${ca-service.config.control-port},${tomcat.ajp.port}
ca-service.policy.admin.enabled-ui-ports=${server.port},${ca-service.config.control-port}

tomcat.ajp.port=9009
tomcat.ajp.remoteauthentication=false
tomcat.ajp.enabled=true
tomcat.ajp.secret=#{null}

## Management
management.server.base-path=/manage
management.server.port=9008
management.server.ssl.enabled=false
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.auditevents.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/
#management.server.ssl.key-store=${server.ssl.key-store}
#management.server.ssl.key-store-password=${server.ssl.key-store-password}
#management.server.ssl.key-password=${server.ssl.key-password}
#management.server.ssl.key-store-type=${server.ssl.key-store-type}
#management.server.ssl.key-alias=${server.ssl.key-alias}


## Syslog
# Parameters:
# - host           : Array of hostname or IP addresses separated by comma.
# - port           : TCP or UDP port
# - protocol       : udp, tcp or ssl
# - bsd            : Using message format RFC_3164 when set to true. Using RFC_5424 (UDP) or RFC_5425 (TCP) when false
# - facility       : The syslog facility identifier (0-23)
# - severity       : The syslog severity code 0-7
# - clienthostname : Name of the sending client host
# - clientapp      : Name of the sending client application

ca-service.syslog.enabled=false
ca-service.syslog.config[0].host=127.0.0.1
ca-service.syslog.config[0].port=514
ca-service.syslog.config[0].protocol=udp
ca-service.syslog.config[0].bsd=true
ca-service.syslog.config[0].facility=13
ca-service.syslog.config[0].severity=6
ca-service.syslog.config[0].clienthostname=ca-docker-server
ca-service.syslog.config[0].clientapp=root-ca

# PKCS11 HSM Settings - Must be set if any key source below is of type "pkcs11"
# Three different types of PKCS11 configurations are available
#
# 1) Externally provided PKCS11 config files by defining one or more config file locations in
#    proxy-service.pkcs11.external-config-locations
# 2) By SoftHSM configuration if the SoftHSM properties below are set
# 3) General PKCS11 configuration for all other values
#
#ca-service.pkcs11.lib=/usr/lib/softhsm/libsofthsm2.so
#ca-service.pkcs11.name=softhsm
#ca-service.pkcs11.slotListIndex=0
#ca-service.pkcs11.slotListIndexMaxRange=0
#ca-service.pkcs11.slot=0
#ca-service.pkcs11.external-config-locations=${sigval-service.config.dataDir}hsm-cfg/mypkcs11.cfg
# Soft HSM properties
#ca-service.pkcs11.softhsm.keylocation=/opt/keystore/softhsm
#ca-service.pkcs11.softhsm.pass=hsm-secret


# Default name used to assemble the name for CA instances and OCSP responders
ca-service.default-name.country=SE
ca-service.default-name.org=Organization
ca-service.default-name.org-unit=
ca-service.default-name.org-identifier=
ca-service.default-name.serial-number=
ca-service.default-name.common-name=CA


# CA Service Key Store properties
# KeySourceType can have the value "none", "jks", "pem", "pkcs11", "pkcs12" or "create".
# For jks and pkcs12, the parameters keyResource, keySourcePass and keySourceAlias must be specified.
# For pem, the parameters keyResource must be specified. keySourcePass must be specified
# if the PEM private key is encrypted.
# For pkcs11, the parameters keySourcePass, keySourceAlias must be provided.
# Location can be specified as "classpath:" or as file path e.g "${proxy-service.path.prefix}/keystore/keyStore.jks"
# A null OCSP type means that the CA key and CA certificate will be used as the OCSP issuer

ca-service.instance.conf.01.ca.key-source.type=create
#ca-service.instance.conf.01.ca.key-source.resource=
#ca-service.instance.conf.01.ca.key-source.alias=
#ca-service.instance.conf.01.ca.key-source.pass=
#ca-service.instance.conf.01.ca.key-source.reloadable-keys=
ca-service.instance.conf.01.ocsp.key-source.type=create
#ca-service.instance.conf.01.ocsp.key-source.resource=
#ca-service.instance.conf.01.ocsp.key-source.alias=
#ca-service.instance.conf.01.ocsp.key-source.pass=
#ca-service.instance.conf.01.ocsp.key-source.reloadable-keys=
ca-service.instance.conf.02.ca.key-source.type=create
ca-service.instance.conf.02.ocsp.key-source.type=none

ca-service.instance.conf.03.ca.key-source.type=jks
ca-service.instance.conf.03.ca.key-source.resource=classpath:keys/ca.jks
ca-service.instance.conf.03.ca.key-source.alias=rsa-ca
ca-service.instance.conf.03.ca.key-source.pass=Test1234
ca-service.instance.conf.03.ocsp.key-source.type=pkcs12
ca-service.instance.conf.03.ocsp.key-source.resource=classpath:keys/ocsp.p12
ca-service.instance.conf.03.ocsp.key-source.alias=ocsp
ca-service.instance.conf.03.ocsp.key-source.pass=Test1234


#Default ca instance configuration
# Unit alternatives "M", "H", "D" or "Y" for Minute, Hour, Day or Year (case insensitive)
# OCSP validity amount 0 means absent validity period
ca-service.instance.conf.default.ca.algorithm=http://www.w3.org/2001/04/xmldsig-more#rsa-sha256
ca-service.instance.conf.default.ca.allow-v1=false
ca-service.instance.conf.default.ca.self-issued-valid-years=20
ca-service.instance.conf.default.ca.validity.start-offset-sec=-30
ca-service.instance.conf.default.ca.validity.unit=Y
ca-service.instance.conf.default.ca.validity.amount=10
ca-service.instance.conf.default.ca.crl-validity.start-offset-sec=0
ca-service.instance.conf.default.ca.crl-validity.unit=H
ca-service.instance.conf.default.ca.crl-validity.amount=2
ca-service.instance.conf.default.ocsp.enabled=true
ca-service.instance.conf.default.ocsp.algorithm=${ca-service.instance.conf.default.ca.algorithm}
ca-service.instance.conf.default.ocsp.validity.start-offset-sec=-10
ca-service.instance.conf.default.ocsp.validity.unit=H
ca-service.instance.conf.default.ocsp.validity.amount=0


ca-service.instance.conf.01.enabled=true
ca-service.instance.conf.01.ca.name.common-name=CA instance 01 common name
ca-service.instance.conf.01.ocsp.name.common-name=OCSP
ca-service.instance.conf.02.enabled=true
ca-service.instance.conf.02.ca.name.common-name=CA instance 02 common name
ca-service.instance.conf.02.ocsp.name.common-name=OCSP 02
ca-service.instance.conf.03.enabled=true
ca-service.instance.conf.03.ca.name.common-name=CA instance 03 common name
ca-service.instance.conf.03.ocsp.name.common-name=OCSP 03

# Disable DB auto configuration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
